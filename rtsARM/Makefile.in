DESTDIR      = @TIMBERC_DATADIR@/rtsARM
CC           = @TARGETCC@
AR           = @TARGETAR@
CFLAGS       = -Os -g -I. -I../include -I../lib -I./asm
INSTALL	     = @INSTALL@

TIMBERC      = @TIMBERC@
TIMBERLIBS   = Prelude.t POSIX.t ARM.t DOM.t BitOps.t DataFunctionalList.t DataObjectsDictionary.t DataObjectsStack.t RandomGenerator.t Binary.t Port.t LPC24XXEthernetPort.t LPC24XXEthernetDriver.t Ethernet.t IPv4.t UDP.t
# Prelude.t $(filter-out Prelude.t,$(notdir $(wildcard ../lib/*.t)))
OBJS         = $(TIMBERLIBS:.t=.o)

DEST         = libTimber.a

all: 
	@printf "Run make install to install and build this RTS.\n\n"
	@printf "Run make $(DEST) to build this RTS in-place.\n"
	@printf "Notice that building in-place requires the RTS to reside in\n"
	@printf "an installed timberc tree.\n\n"

$(DEST): crt.o rts.o ea_lcd/lcd_hw.o $(OBJS)
	rm -f $(DEST)
	$(AR) rc $(DEST) crt.o rts.o ea_lcd/lcd_hw.o $(OBJS)

$(OBJS): %.o: ../lib/%.t ../include/timber.h
	$(TIMBERC) --target ARM --api -c $<

rts.o: rts.h rts.c ../include/timber.h ../include/timber.c ../include/float.c
	$(CC) $(CFLAGS) -Wall -O2 -fno-strict-aliasing -g -D rtsARM -I../include -I../lib -I. -c rts.c

# Assemble: create object files from assembler source files. ARM-only
crt.o : crt.S
	$(CC) -c $(CFLAGS) -D__ASSEMBLY__ crt.S -o crt.o

install: 
	$(INSTALL) -d $(DESTDIR)
	$(INSTALL) timberc.cfg $(DESTDIR)
	$(INSTALL) rts.h $(DESTDIR)
	$(INSTALL) rts.c $(DESTDIR)
	$(INSTALL) gc.c $(DESTDIR)
	$(INSTALL) -d $(DESTDIR)/ea_lcd
	$(INSTALL) ea_lcd/lcd_hw.c $(DESTDIR)/ea_lcd
	$(INSTALL) ea_lcd/lcd_hw.h $(DESTDIR)/ea_lcd
	$(INSTALL) lpc2468_registers.h $(DESTDIR)
	$(INSTALL) lpc2478_lcd.h $(DESTDIR)
	$(INSTALL) my9x10font.h $(DESTDIR)
	$(INSTALL) crt.S $(DESTDIR)
	$(INSTALL) linkerscript.x $(DESTDIR)
	$(INSTALL) Makefile $(DESTDIR)
	cd $(DESTDIR) && make TIMBERC=$(TIMBERC) $(DEST) 


clean:
	rm *.o *.a
